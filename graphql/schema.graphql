### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Edge {
  cursor: String
  node: Listing
}

type Listing {
  access: String
  accommodates: Int
  address: ListingAddress
  amenities: [String]
  availability: ListingsAndReviewsAvailability
  bathrooms: Float
  bed_type: String
  bedrooms: Int
  beds: Int
  calendar_last_scraped: DateTime
  cancellation_policy: String!
  cleaning_fee: Float
  description: String!
  extra_people: Float!
  first_review: DateTime
  guests_included: Float!
  host: ListingHost
  house_rules: String
  id: String!
  images: ListingsAndReviewsImages
  interaction: String
  last_review: DateTime
  last_scraped: DateTime
  listing_url: String
  maximum_nights: String
  minimum_nights: String
  monthly_price: Float
  name: String
  neighborhood_overview: String
  notes: String
  number_of_reviews: Int
  price: Float
  property_type: String
  review_scores: ListingReviewScores
  reviews: [ListingReviews]
  reviews_per_month: Int
  room_type: String
  security_deposit: Float
  space: String
  summary: String
  transit: String
  weekly_price: Float
}

type ListingAddress {
  country: String
  country_code: String
  government_area: String
  location: ListingsAndReviewsAddressLocation
  market: String
  street: String
  suburb: String
}

input ListingAddressInput {
  country: String
  country_code: String
  government_area: String
  location: ListingAddressLocationInput
  market: String
  street: String
  suburb: String
}

input ListingAddressLocationInput {
  coordinates: [Float]
  is_location_exact: Boolean
  type: String
}

input ListingAvailabilityInput {
  availability_30: Int
  availability_60: Int
  availability_90: Int
  availability_365: Int
}

type ListingHost {
  host_about: String
  host_has_profile_pic: Boolean
  host_id: String
  host_identity_verified: Boolean
  host_is_superhost: Boolean
  host_listings_count: Int
  host_location: String
  host_name: String
  host_neighbourhood: String
  host_picture_url: String
  host_response_rate: Int
  host_response_time: String
  host_thumbnail_url: String
  host_total_listings_count: Int
  host_url: String
  host_verifications: [String]
}

input ListingHostInput {
  host_about: String
  host_has_profile_pic: Boolean
  host_id: String
  host_identity_verified: Boolean
  host_is_superhost: Boolean
  host_listings_count: Int
  host_location: String
  host_name: String
  host_neighbourhood: String
  host_picture_url: String
  host_response_rate: Int
  host_response_time: String
  host_thumbnail_url: String
  host_total_listings_count: Int
  host_url: String
  host_verifications: [String]
}

input ListingImagesInput {
  medium_url: String
  picture_url: String
  thumbnail_url: String
  xl_picture_url: String
}

input ListingInput {
  access: String
  accommodates: Int
  address: ListingAddressInput
  amenities: [String]
  availability: ListingAvailabilityInput
  bathrooms: Float
  bed_type: String
  bedrooms: Int
  beds: Int
  calendar_last_scraped: DateTime
  cancellation_policy: String
  cleaning_fee: Float
  description: String
  extra_people: Float
  first_review: DateTime
  guests_included: Float
  host: ListingHostInput
  house_rules: String
  id: String
  images: ListingImagesInput
  interaction: String
  last_review: DateTime
  last_scraped: DateTime
  listing_url: String
  maximum_nights: String
  minimum_nights: String
  monthly_price: Float
  name: String
  neighborhood_overview: String
  notes: String
  number_of_reviews: Int
  price: Float
  property_type: String
  review_scores: ListingReviewScoresInput
  reviews: [ListingReviewsInput]
  reviews_per_month: Int
  room_type: String
  security_deposit: Float
  space: String
  summary: String
  transit: String
  weekly_price: Float
}

type ListingReviewScores {
  review_scores_accuracy: Int
  review_scores_checkin: Int
  review_scores_cleanliness: Int
  review_scores_communication: Int
  review_scores_location: Int
  review_scores_rating: Int
  review_scores_value: Int
}

input ListingReviewScoresInput {
  review_scores_accuracy: Int
  review_scores_checkin: Int
  review_scores_cleanliness: Int
  review_scores_communication: Int
  review_scores_location: Int
  review_scores_rating: Int
  review_scores_value: Int
}

type ListingReviews {
  comments: String
  date: DateTime
  id: String!
  listing_id: String!
  reviewer_id: String!
  reviewer_name: String
}

input ListingReviewsInput {
  comments: String
  date: DateTime
  id: String
  listing_id: String
  reviewer_id: String
  reviewer_name: String
}

type ListingsAndReviewsAddressLocation {
  coordinates: [Float]
  is_location_exact: Boolean
  type: String
}

type ListingsAndReviewsAvailability {
  availability_30: Int
  availability_60: Int
  availability_90: Int
  availability_365: Int
}

type ListingsAndReviewsImages {
  medium_url: String!
  picture_url: String!
  thumbnail_url: String!
  xl_picture_url: String!
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean
}

type Query {
  listing(query: ListingInput!): Listing
  listings(after: String, first: Int, maxPrice: Int, minPrice: Int, query: ListingInput): Response
  listingsById(after: String, first: Int, ids: [String]!): Response
}

type Response {
  edges: [Edge]
  pageInfo: PageInfo
}